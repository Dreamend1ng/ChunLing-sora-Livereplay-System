{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"nav-links\"\n};\nconst _hoisted_2 = {\n  class: \"page\"\n};\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"content-container\"\n};\nconst _hoisted_5 = {\n  class: \"replay-list\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_8 = {\n  class: \"replay-header\"\n};\nconst _hoisted_9 = {\n  class: \"filter-group\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"meta-info\"\n};\nconst _hoisted_12 = {\n  class: \"comment-section\"\n};\nconst _hoisted_13 = {\n  class: \"comment-input\"\n};\nconst _hoisted_14 = {\n  class: \"comment-list\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"empty\"\n};\nconst _hoisted_17 = {\n  class: \"comment-header\"\n};\nconst _hoisted_18 = {\n  class: \"comment-user\"\n};\nconst _hoisted_19 = {\n  class: \"comment-time\"\n};\nconst _hoisted_20 = {\n  class: \"comment-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"nav\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"logo\"\n  }, null, -1 /* HOISTED */)), _cache[7] || (_cache[7] = _createElementVNode(\"h3\", {\n    class: \"title\"\n  }, \"椿忆·时空匣 - 椿翎Sora的录像观看站\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_router_link, {\n    class: \"nav-link\",\n    to: \"home\"\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"首页\")])),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    class: \"nav-link\",\n    to: \"record\"\n  }, {\n    default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"回放直播\")])),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    class: \"nav-link\",\n    to: \"login\"\n  }, {\n    default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"小羽毛注册/登录\")])),\n    _: 1 /* STABLE */\n  })])]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    class: \"video-container\"\n  }, [_createElementVNode(\"video\", {\n    id: \"my-video\",\n    class: \"video-js vjs-big-play-centered\"\n  }, [_createElementVNode(\"source\", {\n    src: \"\",\n    type: \"video/mp4\"\n  })]), _createElementVNode(\"div\", {\n    class: \"video-info\",\n    id: \"videoInfo\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"template\", _hoisted_5, [_createCommentVNode(\" 添加加载状态和错误提示 \"), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"加载中...\")) : $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString($setup.error), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filterType = $event),\n    class: \"soft-filter\"\n  }, _cache[8] || (_cache[8] = [_createElementVNode(\"option\", {\n    value: \"all\"\n  }, \"全部类型\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"打字场\"\n  }, \"打字场\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"聊天场\"\n  }, \"聊天场\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.filterType]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filterDate = $event),\n    class: \"soft-filter\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.filterDate]])])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredReplays, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id,\n      class: \"replay-item\",\n      onClick: $event => $setup.playVideo(item.id, item.title)\n    }, [_createElementVNode(\"div\", null, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, _toDisplayString(item.type === 'typing' ? '打字场' : '聊天场') + \" · \" + _toDisplayString(item.date) + \" · \" + _toDisplayString(item.duration), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_10);\n  }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */)), _createCommentVNode(\" 这是正确的replay-list闭合标签 \")])])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"h4\", null, \"羽毛留言板（\" + _toDisplayString($setup.comments.length) + \"）\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_13, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.newComment = $event),\n    placeholder: \"留下你的爪印吧~ (✧ω✧)\",\n    rows: \"3\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newComment]]), _createElementVNode(\"button\", {\n    onClick: $setup.submitComment,\n    class: \"comment-btn\"\n  }, \"咻咻~评论发送！\"), _cache[10] || (_cache[10] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _cache[11] || (_cache[11] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _cache[12] || (_cache[12] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_14, [$setup.loadingComments ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, \"加载评论中...\")) : !$setup.comments.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, \"快来留下第一条评论吧~\")) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 2\n  }, _renderList($setup.comments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.id,\n      class: \"comment-item\"\n    }, [_createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"span\", _hoisted_18, _toDisplayString(comment.user), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_19, _toDisplayString(comment.time), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_20, _toDisplayString(comment.content), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createVNode","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","_hoisted_2","_hoisted_3","_hoisted_4","id","src","type","_hoisted_5","_createCommentVNode","$setup","loading","_hoisted_6","error","_hoisted_7","_toDisplayString","_hoisted_8","_hoisted_9","$event","filterType","value","filterDate","_renderList","filteredReplays","item","onClick","playVideo","title","_hoisted_11","date","duration","_hoisted_10","_hoisted_12","comments","length","_hoisted_13","newComment","placeholder","rows","submitComment","_hoisted_14","loadingComments","_hoisted_15","_hoisted_16","comment","_hoisted_17","_hoisted_18","user","_hoisted_19","time","_hoisted_20","content"],"sources":["D:\\Works\\ChunLingSoraLiveReplaySystem\\frontend\\src\\components\\LiveRecord.vue"],"sourcesContent":["<script setup>\r\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue'\r\nimport 'video.js/dist/video-js.css'\r\nimport videojs from 'video.js'\r\n\r\nconst replays = ref([])\r\nconst loading = ref(true)\r\nconst error = ref(null)\r\n\r\n// 从API获取回放数据\r\nconst fetchReplays = async (type = 'all') => {\r\n  try {\r\n    let apiUrl = 'http://localhost:9150/api/replay/getAllReplay';\r\n    if (type === '打字场') {\r\n      apiUrl = 'http://localhost:9150/api/replay/getMorningReplay';\r\n    } else if (type === '聊天场') {\r\n      apiUrl = 'http://localhost:9150/api/replay/getEveningReplay';\r\n    }\r\n\r\n    const response = await fetch(apiUrl);\r\n    if (!response.ok) throw new Error('获取回放数据失败')\r\n    const data = await response.json()\r\n    console.log('API返回的数据:', data)\r\n    console.log('API返回的数据长度:', data.length)\r\n\r\n    if (data.length > 0) {\r\n      console.log('第一个数据项:', data[0])\r\n      console.log('第一个数据项类型:', typeof data[0])\r\n    }\r\n\r\n    // 确认每一项都是一个字符串\r\n    if (data.every(item => typeof item === 'string')) {\r\n      replays.value = data.map(item => {\r\n        // 使用正则表达式提取键值对\r\n        const keyValuePairs = item.split(',').map(pair => pair.trim().split(': '))\r\n        const replay = {}\r\n        keyValuePairs.forEach(pair => {\r\n          const [key, value] = pair\r\n          replay[key] = value\r\n        })\r\n        return {\r\n          id: replay['ID'] || '',\r\n          title: replay['LiveTitle'] || '',\r\n          type: replay['SpecialTurn'] || '',\r\n          date: replay['LiveDate'] || '',\r\n          duration: replay['LiveDuration'] || '',\r\n        }\r\n      })\r\n    } else {\r\n      console.error('数据项类型不正确，有些项不是字符串')\r\n    }\r\n\r\n    console.log('映射后的 replays:', replays.value)\r\n  } catch (err) {\r\n    error.value = err.message\r\n    console.error('获取回放数据时出错:', err)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n\r\n\r\nonMounted(() => {\r\n  fetchReplays()\r\n  player = videojs('my-video', {\r\n    controls: true,\r\n    fluid: true,\r\n    responsive: true\r\n  })\r\n})\r\n\r\n// 销毁播放器\r\nonBeforeUnmount(() => {\r\n  if (player) {\r\n    player.dispose()\r\n  }\r\n})\r\n\r\n// 筛选后的回放列表\r\nconst filterType = ref('all')  // 添加这行，定义filterType\r\nconst filterDate = ref('')     // 添加这行，定义filterDate\r\nlet player = null              // 确保player定义在顶部\r\n\r\n// 修改筛选后的回放列表逻辑\r\nconst filteredReplays = computed(() => {\r\n  return replays.value.filter(item => {\r\n    const typeMatch = filterType.value === 'all' || item.type === filterType.value\r\n    const dateMatch = !filterDate.value || item.date.includes(filterDate.value) // 修改为includes匹配\r\n    return typeMatch && dateMatch\r\n  })\r\n})\r\n\r\n// 修改播放视频函数，增加空值检查\r\n// 修改播放视频函数，改为发送GET请求获取视频流\r\n// 在导入部分添加路由相关\r\nimport { useRoute, useRouter } from 'vue-router'\r\n\r\n// 在setup顶部添加路由实例\r\nconst route = useRoute()\r\nconst router = useRouter()\r\n\r\n// 修改播放视频函数\r\nconst playVideo = async (id, title) => {\r\n  if (!player || !id) return;\r\n\r\n  try {\r\n    // 更新路由参数\r\n    router.replace({ path: `/record/${id}` })\r\n\r\n    // 清空旧评论\r\n    comments.value = []\r\n    loadingComments.value = true\r\n\r\n    // 获取新评论\r\n    await fetchComments(id)\r\n\r\n    // 显示加载状态\r\n    loading.value = true;\r\n    error.value = null;\r\n\r\n    // 发送请求获取视频流\r\n    const response = await fetch(`http://localhost:9150/api/replay/playReplay/${id}`);\r\n\r\n    if (!response.ok) throw new Error('获取视频流失败');\r\n\r\n    // 创建视频URL\r\n    const videoUrl = `http://localhost:9150/api/replay/playReplay/${id}`;\r\n\r\n    // 设置视频源并播放\r\n    player.src({ type: 'video/mp4', src: videoUrl });\r\n    player.play();\r\n    document.getElementById('videoInfo').textContent = title;\r\n\r\n  } catch (err) {\r\n    console.error('播放视频时出错:', err);\r\n    error.value = '播放视频失败: ' + err.message;\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n}\r\n\r\n// 添加 comments 定义\r\nconst comments = ref([\r\n  { id: 1, user: '小羽毛123', content: '这场打字回放太精彩了！', time: '2024-03-10 14:30' },\r\n  { id: 2, user: '咕咕粉丝', content: '期待下次直播~', time: '2024-03-10 15:00' }\r\n])\r\n\r\nconst newComment = ref('')\r\n\r\nconst submitComment = () => {\r\n  if (newComment.value.trim()) {\r\n    comments.value.push({\r\n      id: comments.value.length + 1,\r\n      user: '匿名用户',\r\n      content: newComment.value.trim(),\r\n      time: new Date().toLocaleString()\r\n    })\r\n    newComment.value = ''\r\n  }\r\n}\r\n// 在onMounted中添加初始化逻辑\r\nonMounted(() => {\r\n  // 如果URL中有视频ID，自动加载\r\n  if (route.params.video_id) {\r\n    const target = replays.value.find(r => r.id === route.params.video_id);\r\n    if (target) playVideo(target.id, target.title);\r\n  }\r\n})\r\n\r\n// 添加评论加载状态\r\nconst loadingComments = ref(false)\r\n\r\n// 添加获取评论的方法\r\nconst fetchComments = async (videoId) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:9150/api/comment/getComments/${videoId || route.params.video_id}`);\r\n    if (!response.ok) throw new Error('获取评论失败');\r\n    comments.value = await response.json();\r\n  } catch (err) {\r\n    console.error('获取评论失败:', err);\r\n  } finally {\r\n    loadingComments.value = false;\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n  <nav>\r\n    <div class=\"logo\"></div>\r\n    <h3 class=\"title\">椿忆·时空匣 - 椿翎Sora的录像观看站</h3>\r\n    <div class=\"nav-links\">\r\n      <router-link class=\"nav-link\" to=\"home\">首页</router-link>\r\n      <router-link class=\"nav-link\" to=\"record\">回放直播</router-link>\r\n      <router-link class=\"nav-link\" to=\"login\">小羽毛注册/登录</router-link>\r\n    </div>\r\n  </nav>\r\n\r\n  <div class=\"page\">\r\n    <div class=\"container\">\r\n      <div class=\"content-container\">\r\n        <div class=\"video-container\">\r\n          <video id=\"my-video\" class=\"video-js vjs-big-play-centered\">\r\n            <source src=\"\" type=\"video/mp4\">\r\n          </video>\r\n          <div class=\"video-info\" id=\"videoInfo\"></div>\r\n        </div>\r\n\r\n        <template class=\"replay-list\">\r\n          <!-- 添加加载状态和错误提示 -->\r\n          <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n          <div v-else-if=\"error\" class=\"error\">{{ error }}</div>\r\n          <template v-else>\r\n            <div class=\"replay-header\">\r\n              <div class=\"filter-group\">\r\n                <select v-model=\"filterType\" class=\"soft-filter\">\r\n                  <option value=\"all\">全部类型</option>\r\n                  <option value=\"打字场\">打字场</option>\r\n                  <option value=\"聊天场\">聊天场</option>\r\n                </select>\r\n                <input type=\"date\" v-model=\"filterDate\" class=\"soft-filter\">\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n                v-for=\"item in filteredReplays\"\r\n                :key=\"item.id\"\r\n                class=\"replay-item\"\r\n                @click=\"playVideo(item.id, item.title)\"\r\n            >\r\n              <div>{{ item.title }}</div>\r\n              <div class=\"meta-info\">\r\n                {{ item.type === 'typing' ? '打字场' : '聊天场' }} ·\r\n                {{ item.date }} ·\r\n                {{ item.duration }}\r\n              </div>\r\n            </div>\r\n          </template>  <!-- 这是正确的replay-list闭合标签 -->\r\n        </template>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"comment-section\">\r\n        <h4>羽毛留言板（{{ comments.length }}）</h4>\r\n        <div class=\"comment-input\">\r\n          <textarea\r\n              v-model=\"newComment\"\r\n              placeholder=\"留下你的爪印吧~ (✧ω✧)\"\r\n              rows=\"3\"\r\n          ></textarea>\r\n          <button @click=\"submitComment\" class=\"comment-btn\">咻咻~评论发送！</button><br><br><br>\r\n        </div>\r\n        <div class=\"comment-list\">\r\n          <div v-if=\"loadingComments\" class=\"loading\">加载评论中...</div>\r\n          <div v-else-if=\"!comments.length\" class=\"empty\">快来留下第一条评论吧~</div>\r\n          <div\r\n              v-for=\"comment in comments\"\r\n              v-else\r\n              :key=\"comment.id\"\r\n              class=\"comment-item\"\r\n          >\r\n            <div class=\"comment-header\">\r\n              <span class=\"comment-user\">{{ comment.user }}</span>\r\n              <span class=\"comment-time\">{{ comment.time }}</span>\r\n            </div>\r\n            <div class=\"comment-content\">{{ comment.content }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\nnav {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1rem 2rem;\r\n  background: rgb(219, 102, 119);\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.logo {\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-right: 15px;\r\n  background: url('../assets/cl-logo.jpeg') center/contain no-repeat;\r\n}\r\n\r\n.title {\r\n  font-size: 20px;\r\n  color: #ffffff;\r\n  font-weight: 500;\r\n}\r\n\r\n.nav-links {\r\n  margin-left: auto;\r\n  display: flex;\r\n  gap: 2rem;\r\n}\r\n\r\n.nav-link {\r\n  color: #ffffff;\r\n  text-decoration: none;\r\n  font-size: 15px;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.nav-link:hover {\r\n  color: #ffec99;\r\n}\r\n\r\n.page {\r\n  min-height: 100vh;\r\n  padding: 20px;\r\n  background: linear-gradient(135deg, #ff9a9e 0%, #fad0c4 100%);\r\n}\r\n\r\n.container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.content-container {\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 30px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.video-container {\r\n  background-color: #000;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.video-info {\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  color: #333;\r\n}\r\n\r\n/* 回放列表样式 */\r\n.replay-list {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  max-height: 600px;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.replay-header {\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 15px;\r\n  margin: -15px -15px 15px -15px;\r\n  border-radius: 8px 8px 0 0;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.filter-group {\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.replay-item {\r\n  padding: 12px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.replay-item:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.meta-info {\r\n  font-size: 0.8em;\r\n  color: #666;\r\n  margin-top: 5px;\r\n}\r\n\r\n/* 筛选器样式 */\r\n.soft-filter {\r\n  flex: 1;\r\n  min-width: 150px;\r\n  padding: 8px 15px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  backdrop-filter: blur(5px);\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.soft-filter:hover {\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.soft-filter:focus {\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px rgba(219, 102, 119, 0.3),\r\n  0 4px 10px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n/* 评论区样式 */\r\n.comment-section {\r\n  margin-top: 30px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.comment-section h4 {\r\n  color: #db6677;\r\n  margin-bottom: 15px;\r\n  font-size: 18px;\r\n}\r\n\r\n.comment-input {\r\n  margin-bottom: 20px;\r\n  position: relative;\r\n}\r\n\r\n.comment-input textarea {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 2px solid #fad0c4;\r\n  border-radius: 8px;\r\n  background: rgba(255, 255, 255, 0.95);\r\n  resize: vertical;\r\n  transition: all 0.3s ease;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.comment-input textarea:focus {\r\n  outline: none;\r\n  border-color: #db6677;\r\n  box-shadow: 0 0 8px rgba(219, 102, 119, 0.2);\r\n}\r\n\r\n.comment-btn {\r\n  display: inline-block;\r\n  margin-top: 10px;\r\n  padding: 8px 20px;\r\n  background: #db6677;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  float: right;\r\n  clear: both;\r\n}\r\n\r\n.comment-btn:hover {\r\n  background: #ff9a9e;\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.comment-list {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.comment-item {\r\n  padding: 15px;\r\n  margin-bottom: 15px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.comment-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.comment-user {\r\n  color: #db6677;\r\n  font-weight: 500;\r\n}\r\n\r\n.comment-time {\r\n  color: #999;\r\n}\r\n\r\n.comment-content {\r\n  color: #666;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* 移动端适配 */\r\n@media (max-width: 768px) {\r\n  .content-container {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .replay-header {\r\n    position: static;\r\n    margin: -15px -15px 15px -15px;\r\n  }\r\n\r\n  .filter-group {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .soft-filter {\r\n    width: 100%;\r\n  }\r\n\r\n  .comment-btn {\r\n    width: 100%;\r\n    padding: 12px;\r\n    border-radius: 8px;\r\n    float: none;\r\n  }\r\n}\r\n.content-container,\r\n.comment-section {\r\n  opacity: 0;\r\n  animation: fadeSlideUp 0.6s ease-out forwards;\r\n  animation-delay: 0.3s;\r\n}\r\n\r\n.replay-item {\r\n  opacity: 0;\r\n  transform: translateY(20px);\r\n  animation: itemEnter 0.5s ease-out forwards;\r\n}\r\n\r\n@keyframes fadeSlideUp {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(30px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n@keyframes itemEnter {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n/* 为列表项添加延迟动画 */\r\n.replay-item:nth-child(1) { animation-delay: 0.4s; }\r\n.replay-item:nth-child(2) { animation-delay: 0.5s; }\r\n.replay-item:nth-child(3) { animation-delay: 0.6s; }\r\n.replay-item:nth-child(n+4) { animation-delay: 0.7s; }\r\n\r\n/* 视频容器单独动画 */\r\n.video-container {\r\n  opacity: 0;\r\n  transform: translateY(30px);\r\n  animation: fadeSlideUp 0.6s ease-out forwards;\r\n  animation-delay: 0.2s;\r\n}\r\n\r\n/* 评论区输入框动画 */\r\n.comment-input {\r\n  opacity: 0;\r\n  animation: fadeIn 0.4s ease-out forwards;\r\n  animation-delay: 0.8s;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n</style>\r\n\r\n.loading, .empty {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}