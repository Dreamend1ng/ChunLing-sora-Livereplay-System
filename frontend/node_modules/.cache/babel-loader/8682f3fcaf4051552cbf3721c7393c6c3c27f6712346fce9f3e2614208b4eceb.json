{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport 'video.js/dist/video-js.css';\nimport videojs from 'video.js';\n\n// 模拟数据\n\nexport default {\n  __name: 'LiveRecord',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const replays = ref([{\n      id: 1,\n      title: \"打字场回放 2023-09-01\",\n      type: \"typing\",\n      date: \"2023-09-01\",\n      duration: \"1:23:45\",\n      url: \"video1.mp4\"\n    }, {\n      id: 2,\n      title: \"聊天场回放 2023-09-02\",\n      type: \"chatting\",\n      date: \"2023-09-02\",\n      duration: \"2:15:30\",\n      url: \"video2.mp4\"\n    }, {\n      id: 3,\n      title: \"打字场回放 2023-09-03\",\n      type: \"typing\",\n      date: \"2023-09-03\",\n      duration: \"1:45:00\",\n      url: \"video3.mp4\"\n    }]);\n    const filterType = ref('all');\n    const filterDate = ref('');\n    let player = null;\n\n    // 视频播放器初始化\n    onMounted(() => {\n      player = videojs('my-video', {\n        controls: true,\n        fluid: true,\n        responsive: true\n      });\n    });\n\n    // 销毁播放器\n    onBeforeUnmount(() => {\n      if (player) {\n        player.dispose();\n      }\n    });\n    const fetchReplays = async (type = 'all') => {\n      try {\n        let apiUrl = 'http://localhost:9150/api/replay/getAllReplay';\n        if (type === '打字场') {\n          apiUrl = 'http://localhost:9150/api/replay/getMorningReplay';\n        } else if (type === '聊天场') {\n          apiUrl = 'http://localhost:9150/api/replay/getEveningReplay';\n        }\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error('获取回放数据失败');\n        const data = await response.json();\n        console.log('API返回的数据:', data);\n        console.log('API返回的数据长度:', data.length);\n        if (data.length > 0) {\n          console.log('第一个数据项:', data[0]);\n          console.log('第一个数据项类型:', typeof data[0]);\n          currentVideoId.value = data[0].id; // 假设第一个视频的ID作为当前视频ID\n          fetchComments(currentVideoId.value);\n        }\n\n        // 确认每一项都是一个字符串\n        if (data.every(item => typeof item === 'string')) {\n          replays.value = data.map(item => {\n            // 使用正则表达式提取键值对\n            const keyValuePairs = item.split(',').map(pair => pair.trim().split(': '));\n            const replay = {};\n            keyValuePairs.forEach(pair => {\n              const [key, value] = pair;\n              replay[key] = value;\n            });\n            return {\n              id: replay['ID'] || '',\n              title: replay['LiveTitle'] || '',\n              type: replay['SpecialTurn'] || '',\n              date: replay['LiveDate'] || '',\n              duration: replay['LiveDuration'] || ''\n            };\n          });\n        }\n      } catch (err) {\n        error.value = err.message;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 播放视频\n    const playVideo = (url, title) => {\n      player.src({\n        type: 'video/mp4',\n        src: url\n      });\n      player.play();\n      document.getElementById('videoInfo').textContent = title;\n    };\n\n    // 评论区相关\n    const comments = ref([{\n      id: 1,\n      user: '小羽毛123',\n      content: '这场打字回放太精彩了！',\n      time: '2024-03-10 14:30'\n    }, {\n      id: 2,\n      user: '咕咕粉丝',\n      content: '期待下次直播~',\n      time: '2024-03-10 15:00'\n    }]);\n    const newComment = ref('');\n    const submitComment = () => {\n      if (newComment.value.trim()) {\n        comments.value.push({\n          id: comments.value.length + 1,\n          user: '匿名用户',\n          content: newComment.value.trim(),\n          time: new Date().toLocaleString()\n        });\n        newComment.value = '';\n      }\n    };\n    const __returned__ = {\n      replays,\n      filterType,\n      filterDate,\n      get player() {\n        return player;\n      },\n      set player(v) {\n        player = v;\n      },\n      fetchReplays,\n      playVideo,\n      comments,\n      newComment,\n      submitComment,\n      ref,\n      onMounted,\n      onBeforeUnmount,\n      get videojs() {\n        return videojs;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","videojs","replays","id","title","type","date","duration","url","filterType","filterDate","player","controls","fluid","responsive","dispose","fetchReplays","apiUrl","response","fetch","ok","Error","data","json","console","log","length","currentVideoId","value","fetchComments","every","item","map","keyValuePairs","split","pair","trim","replay","forEach","key","err","error","message","loading","playVideo","src","play","document","getElementById","textContent","comments","user","content","time","newComment","submitComment","push","Date","toLocaleString"],"sources":["D:/Works/ChunLingSoraLiveReplaySystem/frontend/src/components/LiveRecord.vue"],"sourcesContent":["<script setup>\r\nimport {ref, onMounted, onBeforeUnmount} from 'vue'\r\nimport 'video.js/dist/video-js.css'\r\nimport videojs from 'video.js'\r\n\r\n// 模拟数据\r\nconst replays = ref([\r\n  {id: 1, title: \"打字场回放 2023-09-01\", type: \"typing\", date: \"2023-09-01\", duration: \"1:23:45\", url: \"video1.mp4\"},\r\n  {id: 2, title: \"聊天场回放 2023-09-02\", type: \"chatting\", date: \"2023-09-02\", duration: \"2:15:30\", url: \"video2.mp4\"},\r\n  {id: 3, title: \"打字场回放 2023-09-03\", type: \"typing\", date: \"2023-09-03\", duration: \"1:45:00\", url: \"video3.mp4\"},\r\n])\r\n\r\nconst filterType = ref('all')\r\nconst filterDate = ref('')\r\nlet player = null\r\n\r\n// 视频播放器初始化\r\nonMounted(() => {\r\n  player = videojs('my-video', {\r\n    controls: true,\r\n    fluid: true,\r\n    responsive: true\r\n  })\r\n})\r\n\r\n// 销毁播放器\r\nonBeforeUnmount(() => {\r\n  if (player) {\r\n    player.dispose()\r\n  }\r\n})\r\n\r\nconst fetchReplays = async (type = 'all') => {\r\n  try {\r\n    let apiUrl = 'http://localhost:9150/api/replay/getAllReplay';\r\n    if (type === '打字场') {\r\n      apiUrl = 'http://localhost:9150/api/replay/getMorningReplay';\r\n    } else if (type === '聊天场') {\r\n      apiUrl = 'http://localhost:9150/api/replay/getEveningReplay';\r\n    }\r\n\r\n    const response = await fetch(apiUrl);\r\n    if (!response.ok) throw new Error('获取回放数据失败')\r\n    const data = await response.json()\r\n    console.log('API返回的数据:', data)\r\n    console.log('API返回的数据长度:', data.length)\r\n\r\n    if (data.length > 0) {\r\n      console.log('第一个数据项:', data[0])\r\n      console.log('第一个数据项类型:', typeof data[0])\r\n      currentVideoId.value = data[0].id // 假设第一个视频的ID作为当前视频ID\r\n      fetchComments(currentVideoId.value)\r\n    }\r\n\r\n    // 确认每一项都是一个字符串\r\n    if (data.every(item => typeof item === 'string')) {\r\n      replays.value = data.map(item => {\r\n        // 使用正则表达式提取键值对\r\n        const keyValuePairs = item.split(',').map(pair => pair.trim().split(': '))\r\n        const replay = {}\r\n        keyValuePairs.forEach(pair => {\r\n          const [key, value] = pair\r\n          replay[key] = value\r\n        })\r\n        return {\r\n          id: replay['ID'] || '',\r\n          title: replay['LiveTitle'] || '',\r\n          type: replay['SpecialTurn'] || '',\r\n          date: replay['LiveDate'] || '',\r\n          duration: replay['LiveDuration'] || '',\r\n        }\r\n      })\r\n    }\r\n  } catch (err) {\r\n    error.value = err.message\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 播放视频\r\nconst playVideo = (url, title) => {\r\n  player.src({type: 'video/mp4', src: url})\r\n  player.play()\r\n  document.getElementById('videoInfo').textContent = title\r\n}\r\n\r\n// 评论区相关\r\nconst comments = ref([\r\n  {id: 1, user: '小羽毛123', content: '这场打字回放太精彩了！', time: '2024-03-10 14:30'},\r\n  {id: 2, user: '咕咕粉丝', content: '期待下次直播~', time: '2024-03-10 15:00'}\r\n])\r\n\r\nconst newComment = ref('')\r\n\r\nconst submitComment = () => {\r\n  if (newComment.value.trim()) {\r\n    comments.value.push({\r\n      id: comments.value.length + 1,\r\n      user: '匿名用户',\r\n      content: newComment.value.trim(),\r\n      time: new Date().toLocaleString()\r\n    })\r\n    newComment.value = ''\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <nav>\r\n    <div class=\"logo\"></div>\r\n    <h3 class=\"title\">椿忆·时空匣 - 椿翎Sora的录像观看站</h3>\r\n    <div class=\"nav-links\">\r\n      <router-link class=\"nav-link\" to=\"home\">首页</router-link>\r\n      <router-link class=\"nav-link\" to=\"record\">回放直播</router-link>\r\n      <router-link class=\"nav-link\" to=\"login\">小羽毛注册/登录</router-link>\r\n    </div>\r\n  </nav>\r\n\r\n  <div class=\"page\">\r\n    <div class=\"container\">\r\n      <div class=\"content-container\">\r\n        <div class=\"video-container\">\r\n          <video id=\"my-video\" class=\"video-js vjs-big-play-centered\">\r\n            <source src=\"\" type=\"video/mp4\">\r\n          </video>\r\n          <div class=\"video-info\" id=\"videoInfo\"></div>\r\n        </div>\r\n\r\n        <div class=\"replay-list\">\r\n          <div class=\"replay-header\">\r\n            <div class=\"filter-group\">\r\n              <select v-model=\"filterType\" class=\"soft-filter\">\r\n                <option value=\"all\">全部类型</option>\r\n                <option value=\"typing\">打字场</option>\r\n                <option value=\"chatting\">聊天场</option>\r\n              </select>\r\n              <input type=\"date\" v-model=\"filterDate\" class=\"soft-filter\">\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n              v-for=\"item in filteredReplays\"\r\n              :key=\"item.id\"\r\n              class=\"replay-item\"\r\n              @click=\"playVideo(item.url, item.title)\"\r\n          >\r\n            <div>{{ item.title }}</div>\r\n            <div class=\"meta-info\">\r\n              {{ item.type === 'typing' ? '打字场' : '聊天场' }} ·\r\n              {{ item.date }} ·\r\n              {{ item.duration }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"comment-section\">\r\n        <h4>羽毛留言板（{{ comments.length }}）</h4>\r\n        <div class=\"comment-input\">\r\n          <textarea\r\n              v-model=\"newComment\"\r\n              placeholder=\"留下你的爪印吧~ (✧ω✧)\"\r\n              rows=\"3\"\r\n          ></textarea>\r\n          <button @click=\"submitComment\" class=\"comment-btn\">咻咻~评论发送！</button>\r\n          <br><br><br>\r\n        </div>\r\n        <div class=\"comment-list\">\r\n          <div\r\n              v-for=\"comment in comments\"\r\n              :key=\"comment.id\"\r\n              class=\"comment-item\"\r\n          >\r\n            <div class=\"comment-header\">\r\n              <span class=\"comment-user\">{{ comment.user }}</span>\r\n              <span class=\"comment-time\">{{ comment.time }}</span>\r\n            </div>\r\n            <div class=\"comment-content\">{{ comment.content }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\nnav {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1rem 2rem;\r\n  background: rgb(219, 102, 119);\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.logo {\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-right: 15px;\r\n  background: url('../assets/cl-logo.jpeg') center/contain no-repeat;\r\n}\r\n\r\n.title {\r\n  font-size: 20px;\r\n  color: #ffffff;\r\n  font-weight: 500;\r\n}\r\n\r\n.nav-links {\r\n  margin-left: auto;\r\n  display: flex;\r\n  gap: 2rem;\r\n}\r\n\r\n.nav-link {\r\n  color: #ffffff;\r\n  text-decoration: none;\r\n  font-size: 15px;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.nav-link:hover {\r\n  color: #ffec99;\r\n}\r\n\r\n.page {\r\n  min-height: 100vh;\r\n  padding: 20px;\r\n  background: linear-gradient(135deg, #ff9a9e 0%, #fad0c4 100%);\r\n}\r\n\r\n.container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.content-container {\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 30px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.video-container {\r\n  background-color: #000;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.video-info {\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  color: #333;\r\n}\r\n\r\n/* 回放列表样式 */\r\n.replay-list {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  max-height: 600px;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.replay-header {\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 15px;\r\n  margin: -15px -15px 15px -15px;\r\n  border-radius: 8px 8px 0 0;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.filter-group {\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.replay-item {\r\n  padding: 12px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.replay-item:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.meta-info {\r\n  font-size: 0.8em;\r\n  color: #666;\r\n  margin-top: 5px;\r\n}\r\n\r\n/* 筛选器样式 */\r\n.soft-filter {\r\n  flex: 1;\r\n  min-width: 150px;\r\n  padding: 8px 15px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  backdrop-filter: blur(5px);\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.soft-filter:hover {\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.soft-filter:focus {\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px rgba(219, 102, 119, 0.3),\r\n  0 4px 10px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n/* 评论区样式 */\r\n.comment-section {\r\n  margin-top: 30px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.comment-section h4 {\r\n  color: #db6677;\r\n  margin-bottom: 15px;\r\n  font-size: 18px;\r\n}\r\n\r\n.comment-input {\r\n  margin-bottom: 20px;\r\n  position: relative;\r\n}\r\n\r\n.comment-input textarea {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 2px solid #fad0c4;\r\n  border-radius: 8px;\r\n  background: rgba(255, 255, 255, 0.95);\r\n  resize: vertical;\r\n  transition: all 0.3s ease;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.comment-input textarea:focus {\r\n  outline: none;\r\n  border-color: #db6677;\r\n  box-shadow: 0 0 8px rgba(219, 102, 119, 0.2);\r\n}\r\n\r\n.comment-btn {\r\n  display: inline-block;\r\n  margin-top: 10px;\r\n  padding: 8px 20px;\r\n  background: #db6677;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  float: right;\r\n  clear: both;\r\n}\r\n\r\n.comment-btn:hover {\r\n  background: #ff9a9e;\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.comment-list {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.comment-item {\r\n  padding: 15px;\r\n  margin-bottom: 15px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.comment-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.comment-user {\r\n  color: #db6677;\r\n  font-weight: 500;\r\n}\r\n\r\n.comment-time {\r\n  color: #999;\r\n}\r\n\r\n.comment-content {\r\n  color: #666;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* 移动端适配 */\r\n@media (max-width: 768px) {\r\n  .content-container {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .replay-header {\r\n    position: static;\r\n    margin: -15px -15px 15px -15px;\r\n  }\r\n\r\n  .filter-group {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .soft-filter {\r\n    width: 100%;\r\n  }\r\n\r\n  .comment-btn {\r\n    width: 100%;\r\n    padding: 12px;\r\n    border-radius: 8px;\r\n    float: none;\r\n  }\r\n}\r\n\r\n.content-container,\r\n.comment-section {\r\n  opacity: 0;\r\n  animation: fadeSlideUp 0.6s ease-out forwards;\r\n  animation-delay: 0.3s;\r\n}\r\n\r\n.replay-item {\r\n  opacity: 0;\r\n  transform: translateY(20px);\r\n  animation: itemEnter 0.5s ease-out forwards;\r\n}\r\n\r\n@keyframes fadeSlideUp {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(30px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n@keyframes itemEnter {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n/* 为列表项添加延迟动画 */\r\n.replay-item:nth-child(1) {\r\n  animation-delay: 0.4s;\r\n}\r\n\r\n.replay-item:nth-child(2) {\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n.replay-item:nth-child(3) {\r\n  animation-delay: 0.6s;\r\n}\r\n\r\n.replay-item:nth-child(n+4) {\r\n  animation-delay: 0.7s;\r\n}\r\n\r\n/* 视频容器单独动画 */\r\n.video-container {\r\n  opacity: 0;\r\n  transform: translateY(30px);\r\n  animation: fadeSlideUp 0.6s ease-out forwards;\r\n  animation-delay: 0.2s;\r\n}\r\n\r\n/* 评论区输入框动画 */\r\n.comment-input {\r\n  opacity: 0;\r\n  animation: fadeIn 0.4s ease-out forwards;\r\n  animation-delay: 0.8s;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}