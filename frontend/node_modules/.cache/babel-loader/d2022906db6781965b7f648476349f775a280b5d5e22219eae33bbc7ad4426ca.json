{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"nav-links\"\n};\nconst _hoisted_2 = {\n  class: \"page\"\n};\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"filters\"\n};\nconst _hoisted_5 = {\n  class: \"content-container\"\n};\nconst _hoisted_6 = {\n  class: \"comment-section\"\n};\nconst _hoisted_7 = {\n  class: \"comment-input\"\n};\nconst _hoisted_8 = {\n  class: \"comment-list\"\n};\nconst _hoisted_9 = {\n  class: \"comment-header\"\n};\nconst _hoisted_10 = {\n  class: \"comment-user\"\n};\nconst _hoisted_11 = {\n  class: \"comment-time\"\n};\nconst _hoisted_12 = {\n  class: \"comment-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"nav\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"logo\"\n  }, null, -1 /* HOISTED */)), _cache[7] || (_cache[7] = _createElementVNode(\"h3\", {\n    class: \"title\"\n  }, \"椿忆·时空匣 - 椿翎Sora的录像观看站\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_router_link, {\n    class: \"nav-link\",\n    to: \"home\"\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"首页\")])),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    class: \"nav-link\",\n    to: \"record\"\n  }, {\n    default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"回放直播\")])),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    class: \"nav-link\",\n    to: \"login\"\n  }, {\n    default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"小羽毛注册/登录\")])),\n    _: 1 /* STABLE */\n  })])]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 修改后的筛选区域 \"), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filterType = $event),\n    class: \"soft-filter\"\n  }, _cache[8] || (_cache[8] = [_createElementVNode(\"option\", {\n    value: \"all\"\n  }, \"全部类型\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"typing\"\n  }, \"打字场\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"chatting\"\n  }, \"聊天场\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.filterType]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filterDate = $event),\n    class: \"soft-filter\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.filterDate]])]), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" 视频区域保持不变... \"), _createCommentVNode(\" 添加评论区 \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h4\", null, \"羽毛留言板（\" + _toDisplayString($setup.comments.length) + \"）\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.newComment = $event),\n    placeholder: \"留下你的爪印吧~ (✧ω✧)\",\n    rows: \"3\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newComment]]), _createElementVNode(\"button\", {\n    onClick: $setup.submitComment,\n    class: \"comment-btn\"\n  }, \"发射弹幕\")]), _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.comments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.id,\n      class: \"comment-item\"\n    }, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", _hoisted_10, _toDisplayString(comment.user), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_11, _toDisplayString(comment.time), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_12, _toDisplayString(comment.content), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createVNode","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","_hoisted_2","_hoisted_3","_createCommentVNode","_hoisted_4","$event","$setup","filterType","value","type","filterDate","_hoisted_5","_hoisted_6","_toDisplayString","comments","length","_hoisted_7","newComment","placeholder","rows","onClick","submitComment","_hoisted_8","_renderList","comment","key","id","_hoisted_9","_hoisted_10","user","_hoisted_11","time","_hoisted_12","content"],"sources":["D:\\Works\\ChunLingSoraLiveReplaySystem\\frontend\\src\\components\\LiveRecord.vue"],"sourcesContent":["<script setup>\r\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue'\r\nimport 'video.js/dist/video-js.css'\r\nimport videojs from 'video.js'\r\n\r\n// 模拟数据\r\nconst replays = ref([\r\n  { id: 1, title: \"打字场回放 2023-09-01\", type: \"typing\", date: \"2023-09-01\", duration: \"1:23:45\", url: \"video1.mp4\" },\r\n  { id: 2, title: \"聊天场回放 2023-09-02\", type: \"chatting\", date: \"2023-09-02\", duration: \"2:15:30\", url: \"video2.mp4\" },\r\n  { id: 3, title: \"打字场回放 2023-09-03\", type: \"typing\", date: \"2023-09-03\", duration: \"1:45:00\", url: \"video3.mp4\" },\r\n])\r\n\r\nconst filterType = ref('all')\r\nconst filterDate = ref('')\r\nlet player = null\r\n\r\n// 视频播放器初始化\r\nonMounted(() => {\r\n  player = videojs('my-video', {\r\n    controls: true,\r\n    fluid: true,\r\n    responsive: true\r\n  })\r\n})\r\n\r\n// 销毁播放器\r\nonBeforeUnmount(() => {\r\n  if (player) {\r\n    player.dispose()\r\n  }\r\n})\r\n\r\n// 筛选后的回放列表\r\nconst filteredReplays = computed(() => {\r\n  return replays.value.filter(item => {\r\n    const typeMatch = filterType.value === 'all' || item.type === filterType.value\r\n    const dateMatch = !filterDate.value || item.date === filterDate.value\r\n    return typeMatch && dateMatch\r\n  })\r\n})\r\n\r\n// 播放视频\r\nconst playVideo = (url, title) => {\r\n  player.src({ type: 'video/mp4', src: url })\r\n  player.play()\r\n  document.getElementById('videoInfo').textContent = title\r\n}\r\nconst comments = ref([\r\n  { id: 1, user: '小羽毛123', content: '这场打字回放太精彩了！', time: '2024-03-10 14:30' },\r\n  { id: 2, user: '咕咕粉丝', content: '期待下次直播~', time: '2024-03-10 15:00' }\r\n])\r\n\r\nconst newComment = ref('')\r\n\r\nconst submitComment = () => {\r\n  if (newComment.value.trim()) {\r\n    comments.value.push({\r\n      id: comments.value.length + 1,\r\n      user: '匿名用户',\r\n      content: newComment.value.trim(),\r\n      time: new Date().toLocaleString()\r\n    })\r\n    newComment.value = ''\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <nav>\r\n    <div class=\"logo\"></div>\r\n    <h3 class=\"title\">椿忆·时空匣 - 椿翎Sora的录像观看站</h3>\r\n    <div class=\"nav-links\">\r\n      <router-link class=\"nav-link\" to=\"home\">首页</router-link>\r\n      <router-link class=\"nav-link\" to=\"record\">回放直播</router-link>\r\n      <router-link class=\"nav-link\" to=\"login\">小羽毛注册/登录</router-link>\r\n    </div>\r\n  </nav>\r\n\r\n  <div class=\"page\">\r\n    <div class=\"container\">\r\n      <!-- 修改后的筛选区域 -->\r\n      <div class=\"filters\">\r\n        <select v-model=\"filterType\" class=\"soft-filter\">\r\n          <option value=\"all\">全部类型</option>\r\n          <option value=\"typing\">打字场</option>\r\n          <option value=\"chatting\">聊天场</option>\r\n        </select>\r\n        <input type=\"date\" v-model=\"filterDate\" class=\"soft-filter\">\r\n      </div>\r\n\r\n      <div class=\"content-container\">\r\n        <!-- 视频区域保持不变... -->\r\n\r\n        <!-- 添加评论区 -->\r\n        <div class=\"comment-section\">\r\n          <h4>羽毛留言板（{{ comments.length }}）</h4>\r\n          <div class=\"comment-input\">\r\n            <textarea\r\n                v-model=\"newComment\"\r\n                placeholder=\"留下你的爪印吧~ (✧ω✧)\"\r\n                rows=\"3\"\r\n            ></textarea>\r\n            <button @click=\"submitComment\" class=\"comment-btn\">发射弹幕</button>\r\n          </div>\r\n          <div class=\"comment-list\">\r\n            <div v-for=\"comment in comments\" :key=\"comment.id\" class=\"comment-item\">\r\n              <div class=\"comment-header\">\r\n                <span class=\"comment-user\">{{ comment.user }}</span>\r\n                <span class=\"comment-time\">{{ comment.time }}</span>\r\n              </div>\r\n              <div class=\"comment-content\">{{ comment.content }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<style scoped>\r\n/* 原有导航样式保持 */\r\nnav {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1rem 2rem;\r\n  background: rgb(219, 102, 119);\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.logo {\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-right: 15px;\r\n  background: url('../assets/cl-logo.jpeg') center/contain no-repeat;\r\n}\r\n\r\n.title {\r\n  font-size: 20px;\r\n  color: #ffffff;\r\n  font-weight: 500;\r\n}\r\n\r\n.nav-links {\r\n  margin-left: auto;\r\n  display: flex;\r\n  gap: 2rem;\r\n}\r\n\r\n.nav-link {\r\n  color: #ffffff;\r\n  text-decoration: none;\r\n  font-size: 15px;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.nav-link:hover {\r\n  color: #ffec99;\r\n}\r\n\r\n/* 新增页面样式 */\r\n.page {\r\n  min-height: 100vh;\r\n  padding: 20px;\r\n  background: linear-gradient(135deg, #ff9a9e 0%, #fad0c4 100%);\r\n}\r\n\r\n.container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.content-container {\r\n  display: grid;\r\n  grid-template-columns: 3fr 1fr;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.filters {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  gap: 15px;\r\n  align-items: center;\r\n}\r\n\r\nselect, input {\r\n  padding: 8px 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #444;\r\n  background-color: #fff;\r\n  color: #333;\r\n}\r\n\r\n.video-container {\r\n  background-color: #000;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.replay-list {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  max-height: 600px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.replay-item {\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.replay-item:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.replay-item.active {\r\n  background-color: #ffb6c1;\r\n}\r\n\r\n.meta-info {\r\n  font-size: 0.8em;\r\n  color: #666;\r\n  margin-top: 5px;\r\n}\r\n\r\n.video-info {\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  color: #333;\r\n}\r\n\r\n/* 适配移动端 */\r\n@media (max-width: 768px) {\r\n  .content-container {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .replay-list {\r\n    order: -1;\r\n    max-height: 300px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}